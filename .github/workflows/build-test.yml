#
#  build-and-test.yml - GitHub Actions CI for swmm-solver
#
#  Created: May 19, 2020
#  Updated: Jun 22, 2021
#
#  Author: Michael E. Tryby
#          US EPA - ORD/CESER
#
#          Caleb A. Buahin
#          Xylem Inc.
#

name: Build and Test

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, ubuntu-22.04]
        requirements: [requirements-swmm.txt]
        include:
          - os: windows-2019
            build_unit_test: make.cmd /g "Visual Studio 17 2022" /A "x64" /t
            build_reg_test: make.cmd /g "Visual Studio 17 2022" /A "x64"
            before_reg_test: before-nrtest.cmd
            run_reg_test: run-nrtests.cmd
            build_id: "%GITHUB_RUN_ID%_%GITHUB_RUN_NUMBER%"
            experimental: false
            artifacts_ext: zip
            artifact_content_type: zip
            docker:
                working-directory: ci-tools/windows
                image: pyswmm/build_swmm
                image_tag: win64-24.6.1
                mount_dir: c:\swmm\
                cache_path: ${{ github.workspace }}\docker_cache\

            defaults:
              run:
                working-directory: ci-tools/windows
                shell: cmd

          - os: ubuntu-22.04
            # Statically link libraries with -s switch to address GitHub Ubuntu 20.04 symbol errors (issue #340)
            build_unit_test: make.sh -s -t -g "Unix Makefiles"
            build_reg_test: make.sh -s -g "Unix Makefiles"
            before_reg_test: before-nrtest.sh
            run_reg_test: run-nrtests.sh
            build_id: ${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}
            experimental: true
            artifacts_ext: tar.gz
            artifact_content_type: tar
            docker:
              image: pyswmm/build_swmm
              image_tag: linux-gnu-24.6.1
              working-directory: ci-tools/linux
              mount_dir: /root/swmm/
              cache_path: ${{ github.workspace }}/docker_cache/
            defaults:
              run:
                shell: bash
                working-directory: ci-tools/linux

    runs-on: ${{ matrix.os }}
    # container:
    #   image: ${{ matrix.image }}
    #   env:
    #     OMP_NUM_THREADS: 1
    #     PROJECT: swmm
    #     BUILD_HOME: build
    #     TEST_HOME: nrtests
    #   options: --cpus 1
    continue-on-error: ${{ matrix.experimental }}
    defaults:
      run:
        shell: ${{ matrix.defaults.run.shell }}
        # working-directory: ${{ matrix.defaults.run.working-directory }}


    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Clone ci-tools repo
        uses: actions/checkout@v3
        with:
          repository: pyswmm/ci-tools
          ref: master
          path: ci-tools

      - name: Cache Docker layers
        id: cache-docker-build-swmm
        uses: actions/cache@v4
        with:
          path: ci/cache/docker/build_swmm
          key: ${{ runner.os }}-cache-docker-${{ matrix.docker.image }}-${{ matrix.docker.image_tag }}
            
      - name: Update Image Cache if cache miss
        if: steps.cache-docker-build-swmm.outputs.cache-hit != 'true'
        run: |
          docker pull ${{ matrix.docker.image }}:${{ matrix.docker.image_tag }}
          echo making dir
          mkdir ${{ matrix.docker.cache_path }}
          echo saving image
          echo ${{ matrix.docker.cache_path }}:${{ matrix.docker.image }}
          echo ${{ matrix.docker.cache_path }}${{ matrix.docker.image }}-${{ matrix.docker.image_tag }}.tar
          docker image save ${{ matrix.docker.cache_path }}:${{ matrix.docker.image }} --output ${{ matrix.docker.cache_path }}${{ matrix.docker.image }}-${{ matrix.docker.image_tag }}.tar

      - name: Use Image Cache if cache hit
        if: steps.cache-docker-build-swmm.outputs.cache-hit == 'true'
        run: docker image load --input ${{ matrix.docker.cache_path }}${{ matrix.docker.image }}-${{ matrix.docker.image_tag }}.tar

      - name: build and test
        run: docker run -v .:${{ matrix.docker.mount_dir }} -w ${{ matrix.docker.mount_dir }}${{ matrix.docker.working-directory }} ${{ matrix.docker.image }}:${{ matrix.docker.image_tag }} ${{ matrix.build_unit_test }}
      # - name: Build and unit test
      #   run: ./${{ matrix.build_unit_test }}

      # - name: Build for reg test
      #   run: ./${{ matrix.build_reg_test }}

      # - name: Before reg test
      #   env:
      #     NRTESTS_URL: https://github.com/pyswmm/swmm-nrtestsuite
      #     BENCHMARK_TAG: v3.1.0
      #   run: ./${{ matrix.before_reg_test }} ${{ env.BENCHMARK_TAG }}

      # - name: Run reg test
      #   run: ./${{ matrix.run_reg_test }} ${{ matrix.build_id }}

      - name: Upload artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: build-test-artifacts
          path: upload/*.*
